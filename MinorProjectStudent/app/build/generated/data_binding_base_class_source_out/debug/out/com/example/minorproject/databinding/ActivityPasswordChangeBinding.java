// Generated by view binder compiler. Do not edit!
package com.example.minorproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.minorproject.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPasswordChangeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button changeButton;

  @NonNull
  public final EditText confirmPassword;

  @NonNull
  public final EditText newPassword;

  @NonNull
  public final TextView passwordChangeHeading;

  @NonNull
  public final RelativeLayout relativeLayout2;

  @NonNull
  public final ImageButton showHideButton;

  private ActivityPasswordChangeBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button changeButton, @NonNull EditText confirmPassword,
      @NonNull EditText newPassword, @NonNull TextView passwordChangeHeading,
      @NonNull RelativeLayout relativeLayout2, @NonNull ImageButton showHideButton) {
    this.rootView = rootView;
    this.changeButton = changeButton;
    this.confirmPassword = confirmPassword;
    this.newPassword = newPassword;
    this.passwordChangeHeading = passwordChangeHeading;
    this.relativeLayout2 = relativeLayout2;
    this.showHideButton = showHideButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPasswordChangeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPasswordChangeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_password_change, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPasswordChangeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.changeButton;
      Button changeButton = ViewBindings.findChildViewById(rootView, id);
      if (changeButton == null) {
        break missingId;
      }

      id = R.id.confirmPassword;
      EditText confirmPassword = ViewBindings.findChildViewById(rootView, id);
      if (confirmPassword == null) {
        break missingId;
      }

      id = R.id.newPassword;
      EditText newPassword = ViewBindings.findChildViewById(rootView, id);
      if (newPassword == null) {
        break missingId;
      }

      id = R.id.passwordChangeHeading;
      TextView passwordChangeHeading = ViewBindings.findChildViewById(rootView, id);
      if (passwordChangeHeading == null) {
        break missingId;
      }

      id = R.id.relativeLayout2;
      RelativeLayout relativeLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (relativeLayout2 == null) {
        break missingId;
      }

      id = R.id.showHideButton;
      ImageButton showHideButton = ViewBindings.findChildViewById(rootView, id);
      if (showHideButton == null) {
        break missingId;
      }

      return new ActivityPasswordChangeBinding((ConstraintLayout) rootView, changeButton,
          confirmPassword, newPassword, passwordChangeHeading, relativeLayout2, showHideButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
